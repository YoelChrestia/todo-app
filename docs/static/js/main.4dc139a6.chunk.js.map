{"version":3,"sources":["components/Header.jsx","components/Task.jsx","components/TaskInfo.jsx","components/Footer.jsx","App.js","index.js"],"names":["Header","states","handleNight","night","newTask","completed","active","changeTheme","bg","theme","bginput","button","task","$value","document","getElementById","value","className","src","alt","onClick","onSubmit","id","readOnly","name","type","placeholder","Task","title","done","handleChecked","handleDelete","taskTheme","taskbutton","taskcount","donetitle","TaskInfo","clearCompleted","taskInfoTheme","count","forEach","taskobj","Footer","seeCompleted","seeAll","seeActive","selectTaskTheme","selectTask","bgdark","Globalstyle","createGlobalStyle","App","useState","setNight","setTask","oldTask","setOldTask","setActive","setCompleted","createNewTask","newTaskCreated","allTask","e","preventDefault","target","trim","map","tas","currentTask","filter","tesk","qTask","find","index","indexOf","completedTask","taskcheck","actualActived","actualAct","actualCompleted","actualComp","ReactDOM","render"],"mappings":"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","file":"static/js/main.4dc139a6.chunk.js","sourcesContent":["\r\nconst Header = ({handleNight, night, newTask, completed, active}) => {\r\n    const changeTheme = {\r\n        bg: \"./images/bg-mobile-light.jpg\",\r\n        theme: \"./images/icon-moon.svg\",\r\n        bginput: \"inputlight\",\r\n        button: \"buttonlight\",\r\n        task: \"tasklight\",\r\n    }\r\n \r\n    let states;\r\n\r\n    const $value = document.getElementById('input')\r\n\r\n    if(completed || active){\r\n        states = true;\r\n    } else {\r\n        states = false;\r\n    }\r\n\r\n    if(active){\r\n        $value.value = \"\";\r\n    }\r\n\r\n    if(completed){\r\n        $value.value = \"\";\r\n    }\r\n \r\n    if(night === true){\r\n        changeTheme.bg = \"./images/bg-mobile-dark.jpg\"\r\n        changeTheme.theme = \"./images/icon-sun.svg\"\r\n        changeTheme.bginput = \"inputdark\"\r\n        changeTheme.button = \"buttondark\"\r\n        changeTheme.task = \"taskdark\"\r\n    } else {\r\n        changeTheme.bg = \"./images/bg-mobile-light.jpg\"\r\n        changeTheme.theme = \"./images/icon-moon.svg\"\r\n        changeTheme.bginput = \"inputlight\"\r\n        changeTheme.button = \"buttonlight\"\r\n        changeTheme.task = \"tasklight\" \r\n    }\r\n\r\n    return (\r\n    <header>\r\n        <img className=\"background-mobile\" src={changeTheme.bg} alt=\"\"/>\r\n        <div className=\"logo__contain\">\r\n            <h1 className=\"logo\">TODO</h1>\r\n            <img onClick={handleNight} src={changeTheme.theme} alt=\"\"/>\r\n        </div>\r\n        <form onSubmit={newTask} className=\"form\">\r\n            <input id=\"input\" readOnly={states} name=\"title\" className={changeTheme.bginput} type=\"text\" placeholder=\"Create a new todo..\" />\r\n            <button className={changeTheme.button} type=\"submit\"></button>\r\n        </form>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Task = ({night, title, done, handleChecked, handleDelete}) => {\r\n   \r\n    const taskTheme = {\r\n        task: \"tasklight\",\r\n        taskbutton: \"tasklight__button\",\r\n        taskcount: \"taskcount__light\",\r\n        donetitle: \"\"\r\n    }\r\n\r\n    if(done) {\r\n        taskTheme.taskbutton = \"buttoncheck\"\r\n        taskTheme.donetitle = \"donetitle\" \r\n    }\r\n\r\n    if(night === true){\r\n        taskTheme.task = \"taskdark\"\r\n        taskTheme.button = \"taskdark__button\"\r\n        taskTheme.taskcount = \"taskcount__dark\"\r\n    } else {\r\n        taskTheme.task = \"tasklight\"\r\n        taskTheme.button = \"tasklight__button\"\r\n        taskTheme.taskcount = \"taskcount__light\"\r\n    }\r\n   \r\n    return (\r\n        <div className=\"task__contain\">\r\n            <div className={taskTheme.task}>\r\n                <button onClick={handleChecked} className={taskTheme.taskbutton}></button>\r\n                <p className={taskTheme.donetitle}>{title}</p>\r\n                <img onClick={handleDelete} className=\"cruz\" src=\"./images/icon-cross.svg\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task; ","import React from 'react';\r\n\r\nconst TaskInfo = ({night, task, clearCompleted}) => {\r\n\r\n    const taskInfoTheme = {\r\n        TaskInfo: \"taskcount__light\"\r\n    }\r\n\r\n    let count = 0;\r\n\r\n    task.forEach(taskobj => {\r\n        if(taskobj.done === false){\r\n         count++;\r\n        }\r\n    })\r\n\r\n    if(night){\r\n        taskInfoTheme.TaskInfo = \"taskcount__dark\"\r\n    } else {\r\n        taskInfoTheme.TaskInfo = \"taskcount__light\"\r\n    }\r\n\r\n    return(\r\n        <div className={taskInfoTheme.TaskInfo}>\r\n            <p className=\"items\">{count} items left</p>\r\n            <p onClick={clearCompleted} className=\"clear\">Clear Completed</p>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default TaskInfo;","import React from 'react';\r\n\r\nconst Footer = ({night, seeCompleted, seeAll, seeActive}) => {\r\n    const selectTaskTheme = {\r\n        selectTask: \"selectTask__light\"\r\n    }\r\n    \r\n    if(night === true){\r\n        selectTaskTheme.selectTask = \"selectTask__dark\"\r\n    } else {\r\n        selectTaskTheme.selectTask = \"selectTask__light\"\r\n    }\r\n\r\n    return(\r\n        <div className={selectTaskTheme.selectTask}>\r\n            <p onClick={seeAll} className=\"textblue\">All</p>\r\n            <p onClick={seeActive} className=\"active textblue\">Active</p>\r\n            <p onClick={seeCompleted} className=\"textblue\">Completed</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n\r\n","import { useState } from 'react';\nimport Header from './components/Header';\nimport Task from './components/Task';\nimport { generate as id } from 'shortid';\nimport TaskInfo from './components/TaskInfo';\nimport Footer from './components/Footer';\nimport { createGlobalStyle } from 'styled-components';\n\nlet bgdark = false;\nconst darkbackground = \"rgb(24, 24, 36)\";\n\nconst Globalstyle = createGlobalStyle`\n  body{\n  background-color:  ${ darkbackground };\n  }\n`\nconst App = () => {\n  const[night, setNight] = useState(false);\n  const[task, setTask] = useState([{\n    title: \"limpiar la casa\",\n    done: false\n  }])\n\n  const[oldTask, setOldTask] = useState(task);\n  const[active, setActive] = useState(false);\n  const[completed, setCompleted] = useState(false);\n\n  const newTask = (e) => {\n  e.preventDefault(); \n  if(e.target.title.value.trim() !== \"\"){\n    createNewTask(e.target.title.value);\n    e.target.title.value = \"\";\n  }\n  }\n\n  const createNewTask = (title) => {\n    const newTaskCreated = {\n      id: id(),\n      title,\n      done: false\n    }\n    const allTask = [...task, newTaskCreated];\n    setTask(allTask);\n  }\n\n  const clearCompleted = () => {\n    const completedTask = oldTask.filter(taskcheck => taskcheck.done === false)\n    setTask(completedTask);\n    setOldTask(completedTask);\n  }\n\n  const handleChecked = (id) => {\n    const currentTask = [...task];\n    const qTask = currentTask.find(tesk => tesk.id === id);\n    const index = currentTask.indexOf(qTask);\n    currentTask[index].done =!currentTask[index].done;\n    setTask(currentTask);\n    setOldTask(task);\n  }\n  \n  const seeCompleted = () => {\n    setActive(false);\n    setCompleted(true);\n    setTask(oldTask);\n    let actualCompleted = oldTask.filter(actualComp => actualComp.done === true)\n    setTask(actualCompleted);\n  }\n\n  const seeActive = () => {\n      setCompleted(false);\n      setActive(true);\n      setTask(oldTask);\n      let actualActived = oldTask.filter(actualAct => actualAct.done === false)\n      setTask(actualActived);\n  }\n\n  const seeAll = () => {\n    setActive(false);\n    setCompleted(false);\n    setTask(oldTask);\n  }\n\n\n  const handleDelete = (id) => {\n    let currentTask = task;\n    currentTask = currentTask.filter(tesk => tesk.id !== id);\n    setTask(currentTask);\n  }\n  \n  const handleNight = () => {\n    setNight(!night);\n    bgdark = !bgdark;\n  }\n  \n  return (\n    <div className=\"App\">\n      {\n        (bgdark) && <Globalstyle />\n      }\n      <Header\n        active={active}\n        completed={completed}\n        newTask={newTask}\n        handleNight={handleNight}\n        night={night}\n      />\n      {\n        task.map(tas => (\n          <Task\n          key={id()}\n          handleDelete={() => handleDelete(tas.id)}\n          night={night}\n          title={tas.title}\n          done={tas.done}\n          handleChecked={() => handleChecked(tas.id)}\n          />\n        ))\n      }\n      <TaskInfo\n        clearCompleted={clearCompleted}\n        task={task}\n        night={night}\n      />\n      <Footer\n        seeActive={seeActive}\n        seeAll={seeAll}\n        seeCompleted={seeCompleted}\n        night={night}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}